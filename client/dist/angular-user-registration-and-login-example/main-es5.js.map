{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/register/register.component.html","webpack:///./src/app/_helpers/auth.guard.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/index.ts","webpack:///./src/app/_services/interceptor.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n<!-- main app container -->\\n<div class=\\\"jumbotron\\\">\\n  <a *ngIf=\\\"currentUser\\\" class=\\\"nav-item nav-link\\\" style=\\\"cursor:pointer\\\" (click)=\\\"logout()\\\">Logout</a>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 offset-md-4\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<h1>Hi {{currentUser.firstName}}!</h1>\\n<p>Welcome to home page!!</p>\"","module.exports = \"<h3>User Login</h3>\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onFormSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.email.errors }\\\" placeholder=\\\"Enter email here\\\"/>\\n        <div *ngIf=\\\"submitted && fval.email.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"fval.email.errors.required\\\">Email is required</div>\\n            <div *ngIf=\\\"fval.email.errors.email\\\">Enter valid email address</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.password.errors }\\\" placeholder=\\\"Enter password here\\\" />\\n        <div *ngIf=\\\"submitted && fval.password.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"fval.password.errors.required\\\">Password is required</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n            Login\\n        </button>\\n        <a routerLink=\\\"/register\\\" class=\\\"btn btn-link\\\">Register</a>\\n    </div>\\n</form>\"","module.exports = \"<h3>User Registration</h3>\\n<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onFormSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"firstName\\\">First Name</label>\\n        <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.firstName.errors }\\\" placeholder=\\\"Enter First Name here\\\"/>\\n        <div *ngIf=\\\"submitted && fval.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"fval.firstName.errors.required\\\">First Name is required</div>\\n        </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"lastName\\\">Last Name</label>\\n        <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Last Name here\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email</label>\\n    <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.email.errors }\\\" placeholder=\\\"Enter email here\\\"/>\\n    <div *ngIf=\\\"submitted && fval.email.errors\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"fval.email.errors.required\\\">Email is required</div>\\n        <div *ngIf=\\\"fval.email.errors.email\\\">Enter valid email address</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Phone</label>\\n    <input type=\\\"text\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.phone.errors }\\\" placeholder=\\\"Enter Phone here\\\"/>\\n    <div *ngIf=\\\"submitted && fval.phone.errors\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"fval.phone.errors.required\\\">Phone is required</div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Password</label>\\n    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.password.errors }\\\" placeholder=\\\"Enter Password here\\\"/>\\n    <div *ngIf=\\\"submitted && fval.password.errors\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"fval.password.errors.required\\\">Password is required</div>\\n        <div *ngIf=\\\"fval.password.errors.minlength\\\">Password must be at least 6 characters</div>\\n    </div>\\n    \\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n        <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n        Register\\n    </button>\\n    <a routerLink=\\\"/login\\\" class=\\\"btn btn-link\\\">Login to continue</a>\\n</div>\\n</form>\"","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { User } from '../_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    login(email: string, password: string) {\n        return this.http.post<any>(`auth/login`, { email, password })\n            .pipe(map(user => {\n                if (user && user.token) {\n                    // store user details in local storage to keep user logged in\n                    localStorage.setItem('currentUser', JSON.stringify(user.result));\n                    this.currentUserSubject.next(user);\n                }\n\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user data from local storage for log out\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}","export * from './authentication.service';\nexport * from './user.service';","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../environments/environment\";\n@Injectable()\nexport class InterceptorService implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    let reqUrl = environment.apiBaseUrl;\n      req = req.clone({\n        headers: req.headers.set(\n          \"Authorization\",\n          \"Bearer \" + localStorage.getItem(\"token\")\n        ),\n        url: reqUrl +\"\"+ req.url\n      });\n    return next.handle(req);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User } from '../_models/user';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  constructor(private http: HttpClient) { }\n\n  register(user: User) {\n      return this.http.post(`auth/register`, user);\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './_helpers/auth.guard';\n\n/**Componenets */\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n  { \n    path: 'login', \n    component: LoginComponent \n  },\n  { \n    path: 'register', \n    component: RegisterComponent \n  },\n  { path: '**', redirectTo: '' }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\nimport { User } from './_models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  currentUser: User;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n      this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n}\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n \nimport { ToastrModule } from 'ngx-toastr';\n// services\nimport { InterceptorService } from './_services/interceptor.service';\nimport { UserService } from './_services/user.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot()\n  ],\n  providers: [UserService,{ provide: HTTP_INTERCEPTORS, useClass: InterceptorService, multi: true }], //\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent implements OnInit {\n  public currentUser;\n  constructor() {\n    this.currentUser = localStorage.getItem('currentUser')? JSON.parse(localStorage.getItem('currentUser')) : '';\n   }\n\n  ngOnInit() {\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { AuthenticationService } from '../_services';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService : AuthenticationService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n  }\n\n\n    // for accessing to form fields\n    get fval() { return this.loginForm.controls; }\n\n  onFormSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n     this.authenticationService.login(this.fval.email.value, this.fval.password.value)\n        .subscribe(\n            data => {\n              this.router.navigate(['/']);\n            },\n            error => {\n              this.toastr.error(error.error.message, 'Error');\n                this.loading = false;\n            });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { UserService } from '../_services/user.service';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserService,\n    private toastr: ToastrService\n  ) { }\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: ['', [Validators.required,Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n  });\n  }\n\n  get fval() { return this.registerForm.controls; }\n\n  onFormSubmit(){\n    this.submitted = true;\n    // return for here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.userService.register(this.registerForm.value).subscribe(\n      (data)=>{\n        alert('User Registered successfully!!');\n        this.router.navigate(['/login']);\n     },\n      (error)=>{\n        this.toastr.error(error.error.message, 'Error');\n        this.loading = false;\n      }\n    )\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl :'http://localhost:3000/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}